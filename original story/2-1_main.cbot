// Mission 2-1 main script

extern void object::main() {

	// Build ResearchCenter
	newBuilding(ResearchCenter);

	// Start "winged" recearch
	newResearch(ResearchWinged);

	// Build BotFactory
	newBuilding(BotFactory);

	// Build winged grabber
	newBot(WingedGrabber, "2-1_orecollector.cbot");

	// Go home
	go(radar(SpaceShip));

}

// Go.
// goto() with errmode(0)
void go(object target) {
	go(target.position);
}
void go(point target) {
	errmode(0);
	goto(target);
	errmode(1);
}


// Supply.
// Overloaded functions for bring item to destination object.
/* Returns:
	0 - if finished
	1 - if item not found
	2 - if target not found
*/
// Depends on go()
int supply(int what, int where) {
	object target;
	int err;

	target = radar(what);
	if (target == null) return 1;
	go(target.position);
	grab();

	target = radar(where);
	if (target == null) return 2;
	go(target.position);
	errmode(0);
	err = drop();
	while (err != 0) {
		move(-1);
		turn(90);
		err = drop();
		turn(-90;)
	}
	errmode(1);

	return 0;
}
int supply(int what, object where) {
	object target;
	int err;

	target = radar(what);
	if (target == null) return 1;
	go(target.position);
	grab();

	if (where == null) return 2;
	go(where.position);
	errmode(0);
	err = drop();
	while (err != 0) {
		move(-1);
		turn(90);
		err = drop();
		turn(-90;)
	}
	errmode(1);

	return 0;
}


// New building.
// Find spot. Find titanium. Deliver it to spot. Build.
/* Returns:
	0 if done
	1 if no Titanium
*/
// Depends on go()
int newBuilding(int type) {
	object target;
	point  spot;

	spot = flatspace(radar(SpaceShip).position, 10 , 25, 100, 5);

	target = radar(Titanium);
	if (target == null) return 1;
	go(target.position);
	grab();

	go(spot);
	drop();
	move(-4);
	build(type);
	return(0);
}


// New bot.
// Titanium for BotFactory. New bot in factory. Program and energy for new bot.
/* Returns:
	0 if done
	1 if no BotFactory
	2 if no Titanium
	3 if no battery
*/
// Depends on go()
int newBot(int type, string firmwareFile) {
	object target;
	object res;
	file   f();
	string firmware = "";

	target = radar(BotFactory);
	if (target == null) return 1;

	res = radar(Titanium);
	if (res == null) return 2;
	go(res.position);
	grab();

	go(target.position);
	drop();
	move(-3);

	f.open(firmwareFile, "r");
	while (not f.eof()) {
		firmware += f.readln() + "\n";
	}
	target.factory(type, firmware);

	res = radar(PowerCell);
	if (res == null) return 3;
	go(res.position);
	grab();

	go(target.position);
	do {
		target = radar(type, 0,45, 0,5);
		wait(1);
	} while (target == null);
	go(target.position);
	drop();
	move(-5);
	return 0;
}


// New research.
// Start new research if it can.
/* Returns:
	0 if done
	1 if no ResearchCenter
	2 if no battery
*/
// Depends on go(), supply()
int newResearch(int type) {
	object target;
	int err;

	target = radar(ResearchCenter);
	if (target == null) return 1;
	if (target.energyCell == null) {
		err = supply(PowerCell, target);
		if (err == 1) return 2;
	} else if (target.energyCell.energyLevel < 1) {
		go(target.position);
		grab();
		drop(Behind);
		err = supply(PowerCell, target);
		if (err == 1) return 2;
	}
	target.research(type);
	return 0;
}
